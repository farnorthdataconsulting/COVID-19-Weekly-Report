),
xaxis = list(
title = "",
text = "%{y:,}"
),
yaxis = list(
title = "",
tickformat = ",",
automargin=T
),
legend = list(x = .72, y = .95)
)
cases_onset_graph
#Set Table Feature Options
options(reactable.theme = reactableTheme(
backgroundColor = '#fffff',
borderColor = "hsl(233, 9%, 22%)",
stripedColor = '#e6e6e6',
))
#Set Cases Summary and Add Columsn for Reactable Table
cases_reactable_table <- data.frame(case_rate_cases_summary) %>%
mutate(Case_Trend = NA) %>%
select(-c(Date, Cases)) %>%
select(Borough, Community_Rate_Tag, Rate_Last_7_Days, Cases_Last_7_Days, , Case_Trend)
#Create Tag Dictionary for Color Coding Case Rate Tags
rate_tag_dict <- dict(init_keys = NULL, init_values = NULL)
rate_tag_dict[">400"] <- 'level_5'
rate_tag_dict["200-399"] <- 'level_4'
rate_tag_dict["100-199"] <- 'level_3'
rate_tag_dict["50-99"] <- 'level_2'
rate_tag_dict["0-49"] <- 'level_1'
#Generate Final Table with Reactable
reactable(cases_reactable_table,
defaultPageSize = 50,
fullWidth = FALSE,
striped = TRUE,
borderless = FALSE,
columns = list(
Borough = colDef(name = "Borough/Census Area",
minWidth = 260,
cell = function(value) {
class <- 'area_varela'
div(class = class, value)
}),
Community_Rate_Tag = colDef(name = 'Community Case Rate',
align = 'center',
show = FALSE,
minWidth = 100,
cell = function(value) {
class <- paste0("tag rate_", rate_tag_dict[value])
div(class = class, value)
}),
Cases_Last_7_Days = colDef(#name = "Case Count",
html = TRUE,
header = function(value) {
value = paste0("Case Count ", case_rate_cases_timeframe)
div(value)
},
minWidth = 130,
align = 'center',
cell = function(value){
div(class = 'number_varela', value)
}
),
Rate_Last_7_Days = colDef(name = "Case Rate Per 100K",
minWidth = 120,
align = 'center',
format = colFormat(separators = TRUE),
cell = function(value, index){
level <- cases_reactable_table$Community_Rate_Tag[index]
class <- paste0("tag rate_", rate_tag_dict[level])
div(class = class, value)
}
),
Case_Trend = colDef(#name = "Cases Trend (Last 6 Weeks)",
header = function(value) {
value = paste0("Weekly Case Counts ", case_rate_rates_timeframe)
div(value)
},
align = 'center',
html = TRUE,
minWidth = 180,
cell = function(values, index) {
chart_path = case_rate_temp_file_dict[cases_reactable_table$Borough[index]]
img_src <- knitr::image_uri(chart_path)
image <- img(src = img_src, alt = '', width = 140, height = 25)
tagList(
div(style = list(display = 'flex'), image))
})
))
#Set Max Variable for Highlights
max_search <- select(hosp_bed_occupied, -c(Survey.Date))
max <- 0
for (region in colnames(max_search)){
region_select <- select(max_search, region)
max_region <- max(region_select)
if (max_region >= max){
max <- max_region
}
}
max <- max + 10
#Find Most Current Date for Omicron Highlight
#IF OMICRON HAS FINAL DATE, DELETE SECTION AND ADD FINAL DATE TO HIGHLIGHT SECTION IN LAYOUT
max_date_search <- select(hosp_bed_occupied, Survey.Date)
max_date_search$Survey.Date <- as.Date(max_date_search$Survey.Date, "%Y-%m-%d")
max_date <- max(max_date_search$Survey.Date)
max_date <- format(max_date, "%Y-%m-%d")
#Generate Graph
hosp_bed_graph <- plot_ly(hosp_bed_occupied) %>%
#ADD SOUTHWEST
add_trace(
name = "Southwest",
type = "bar",
x = ~Survey.Date,
y = ~Southwest,
marker=list(
color='#460202')
) %>%
#ADD SOUTHEAST BARS
add_trace(
name = "Southeast",
type = "bar",
x = ~Survey.Date,
y = ~Southeast,
marker=list(
color='#690202')
) %>%
#ADD NORTHERN BARS
add_trace(
name = "Northern",
type = "bar",
x = ~Survey.Date,
y = ~Northern,
marker=list(
color='#8c0303')
) %>%
#ADD MATANUSKA SUSITNA BARS
add_trace(
name = "Matanuska - Susitna",
type = "bar",
x = ~Survey.Date,
y = ~Matanuska.Susitna,
marker=list(
color='#a81818')
) %>%
#ADD Interior BARS
add_trace(
name = "Interior",
type = "bar",
x = ~Survey.Date,
y = ~Interior,
marker=list(
color='#f24949'
)
) %>%
#ADD GULF COAST BARS
add_trace(
name = "Gulf Coast",
type = "bar",
x = ~Survey.Date,
y = ~Gulf.Coast,
marker=list(
color='#ed8080'
)
) %>%
#ADD ANCHORAGE BARS
add_trace(
name = "Anchorage",
type = "bar",
x = ~Survey.Date,
y = ~Anchorage,
marker=list(
color='#fab6b6'
)
) %>%
#ADD TOTALS
add_trace(
name = "Total",
type = "scatter",
mode = "line",
x = ~Survey.Date,
y = ~Total,
line=list(
color='rgba(0,0,0,0)'
),
hovertemplate = "<b>%{y}</b>",
showlegend = FALSE
) %>%
#SET LAYOUT
layout(
title = list(
text = "",
xanchor = "center",
x = .400,
yanchor = "middle",
textposition = "right",
font = list(
family = "Open Sans",
size = 20)
),
#ADD HIGHLIGHT TAGS
annotations = list(
#DELTA TAG
list(
text = "<b>DELTA</b>",
font = list(
size = 12,
color = "#494949"
),
xref = "x",
x = "2021-07-31",
yref = "paper",
y = .98,
align = "left",
showarrow = FALSE),
#OMICRON TAG
list(
text = "<b>OMICRON</b>",
font = list(
size = 12,
color = "#494949"
),
xref = "x",
x = "2022-02-03",
yref = "paper",
y = .98,
align = "left",
showarrow = FALSE)
),
#ADD HIGHLIGHTS
shapes = list(
#DELTA HIGHLIGHT
list(type = "rect",
fillcolor = "#558baf",
line = list(color = "rgba(0,0,0,0)"),
opacity = .2,
x0 = "2021-07-04",
x1 = "2021-12-11",
xref = "x",
y0 = 0,
y1 = max,
yref = "y",
layer = "below"
),
#OMICRON HIGHLIGHT
list(type = "rect",
fillcolor = "#377f64",
line = list(color = "rgba(0,0,0,0)"),
opacity = .2,
x0 = "2021-12-26",
x1 = max_date, #SET FINAL DATE WHEN OFFICIAL END OF OMICRON DETERMINED
xref = "x",
y0 = 0,
y1 = max,
yref = "y",
layer = "below"
)
),
#Set X AXIS TITLE
xaxis = list(
title = "",
text = "%{y:,}"
),
#SET YAXIS TITLE
yaxis = list(
title = "",
tickformat = ",",
automargin=T
),
#SET LEGEND LOCATION
legend = list(
x = .03,
y = .97),
#SET UNIFIED LEGEND HOVER
hovermode = "x unified",
#STACK BARS
barmode = "stack"
)
hosp_bed_graph
#Create list of Date to order graph
date_list <- list(vac_unvac_hosp_data$Date)
#Generate Graph
vac_unvac_hosp_graph <- plot_ly(vac_unvac_hosp_data, hovertemplate = "%{y:.2f}") %>%
#Add Up to Date
add_trace(
name = "Up to Date",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Up.to.Date,
marker = list(
color = "#00dca6",
size = 5),
line = list(
width = 5,
color = "#00dca6"
)
) %>%
add_trace(
name = "Fully Vaccinated",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Full.Vax,
marker = list(
color = "#ad95dc",
size = 5),
line = list(
width = 5,
color = "#ad95dc")
) %>%
add_trace(
name = "Unvaccinated",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Unvax,
marker = list(
color = "#1d81a2",
size = 5),
line = list(
width = 5,
color = "#1d81a2")
) %>%
#1d81a2
layout(
legend = list(
x = .78,
y = .98),
scene = list(
xaxis = list(
showspikes = TRUE
)
),
xaxis = list(
title = "",
categoryoder = "array",
categoryarray =  date_list
),
yaxis = list(
title = ""
),
hovermode = "x unified"
)
vac_unvac_hosp_graph
vac_unvac_case_graph <- plot_ly(vac_unvac_case_data, hovertemplate = "%{y:.2f}") %>%
#Add Up to Date
add_trace(
name = "Up to Date",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Up.to.Date,
line = list(
width = 3,
color = "#00dca6"
)
) %>%
add_trace(
name = "Fully Vaccinated",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Full.Vax,
line = list(
width = 3,
color = "#ad95dc"
)
) %>%
add_trace(
name = "Unvaccinated",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Unvax,
line = list(
width = 3,
color = "#1d81a2"
)
) %>%
layout(
legend = list(
x = .03,
y = .97),
xaxis = list(
title = ""
),
yaxis = list(
title = ""
),
hovermode = "x unified"
)
vac_unvac_case_graph
tags$link(href = "https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback", rel = "stylesheet")
tags$link(href = "https://fonts.googleapis.com/css2?family=Open+Sans+Condensed&display=swap", rel="stylesheet")
tags$link(href = "https://fonts.googleapis.com/css2?family=Open+Sans&display=swap", rel="stylesheet")
tags$link(href = "https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap", rel="stylesheet")
tags$link(href = "https://fonts.googleapis.com/css2?family=Varela+Round&display=swap", rel="stylesheet")
#Create list of Date to order graph
date_list <- list(vac_unvac_hosp_data$Date)
#Generate Graph
vac_unvac_hosp_graph <- plot_ly(vac_unvac_hosp_data, hovertemplate = "%{y:.2f}") %>%
#Add Up to Date
add_trace(
name = "Up to Date",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Up.to.Date,
marker = list(
color = "#00dca6",
size = 5),
line = list(
width = 5,
color = "#00dca6"
)
) %>%
add_trace(
name = "Fully Vaccinated",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Full.Vax,
marker = list(
color = "#ad95dc",
size = 5),
line = list(
width = 5,
color = "#ad95dc")
) %>%
add_trace(
name = "Unvaccinated",
type = "scatter",
mode = "lines+markers",
x = ~Date,
y = ~Unvax,
marker = list(
color = "#1d81a2",
size = 5),
line = list(
width = 5,
color = "#1d81a2")
) %>%
#1d81a2
layout(
legend = list(
x = .78,
y = .98),
scene = list(
xaxis = list(
showspikes = TRUE
)
),
xaxis = list(
title = "",
categoryoder = "array",
categoryarray =  date_list
),
yaxis = list(
title = "COVID-19 Hospitalizations per 100,000 People per Day"
),
hovermode = "x unified"
)
vac_unvac_hosp_graph
vac_unvac_case_graph <- plot_ly(vac_unvac_case_data, hovertemplate = "%{y:.2f}") %>%
#Add Up to Date
add_trace(
name = "Up to Date",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Up.to.Date,
line = list(
width = 3,
color = "#00dca6"
)
) %>%
add_trace(
name = "Fully Vaccinated",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Full.Vax,
line = list(
width = 3,
color = "#ad95dc"
)
) %>%
add_trace(
name = "Unvaccinated",
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Unvax,
line = list(
width = 3,
color = "#1d81a2"
)
) %>%
layout(
legend = list(
x = .03,
y = .97),
xaxis = list(
title = ""
),
yaxis = list(
title = "COVID-19 Cases per 100,000 People per Day"
),
hovermode = "x unified"
)
vac_unvac_case_graph
